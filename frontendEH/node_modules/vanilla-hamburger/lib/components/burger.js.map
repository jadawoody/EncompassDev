{"version":3,"file":"burger.js","sourceRoot":"","sources":["../../src/lib/components/burger.ts"],"names":[],"mappings":"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","sourcesContent":["import { createTemplate, createRoot } from '../utils/dom.js';\nimport { props, render, update } from '../internals.js';\nimport css from '../styles/burger.js';\nimport type { BurgerProps, RenderOptions } from '../types';\n\nconst AREA = 48;\n\nconst tpl = createTemplate(`<style>${css}</style>`);\n\nconst btn = Symbol('btn');\nconst updating = Symbol('updating');\nconst prepare = Symbol('prepare');\n\nexport const defaultProps: BurgerProps = {\n  size: 32,\n  direction: 'left',\n  disabled: false,\n  distance: 'md',\n  duration: 0.4,\n  label: 'hamburger',\n  easing: 'cubic-bezier(0, 0, 0, 1)',\n  pressed: false\n};\n\nexport abstract class Burger extends HTMLElement {\n  static get observedAttributes(): string[] {\n    return ['disabled', 'distance', 'duration', 'easing', 'pressed', 'size', 'label'];\n  }\n\n  protected abstract get lines(): number;\n\n  protected abstract [render](options: RenderOptions): void;\n\n  private [btn]!: HTMLButtonElement;\n\n  private [props]: BurgerProps = {} as BurgerProps;\n\n  private [updating]!: boolean;\n\n  /**\n   * A valid `transition-timing-function` CSS value, for example 'ease-out'.\n   * @type {string}\n   * @default cubic-bezier(0, 0, 0, 1)\n   */\n  get easing(): string {\n    return this[props].easing;\n  }\n\n  set easing(easing: string) {\n    this[props].easing = easing;\n    this[update]();\n  }\n\n  /**\n   * The vertical distance between the lines. Small (sm), medium (md) or large (lg).\n   * @type {'sm' | 'md' | 'lg'}\n   * @default md\n   */\n  get distance(): 'sm' | 'md' | 'lg' {\n    return this[props].distance;\n  }\n\n  set distance(distance: 'sm' | 'md' | 'lg') {\n    this[props].distance = distance;\n    this[update]();\n  }\n\n  /**\n   * The duration of the animation. Can be set to zero if no animation is desired.\n   * @type {number}\n   * @default 0.4\n   */\n  get duration(): number {\n    return this[props].duration;\n  }\n\n  set duration(duration: number) {\n    this[props].duration = duration;\n    this[update]();\n  }\n\n  /**\n   * When set to true, the internal <button> element is disabled.\n   * @type {boolean}\n   * @attr disabled\n   * @default false\n   */\n  get disabled(): boolean {\n    return this[props].disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this[props].disabled = disabled;\n    this.toggleAttribute('disabled', disabled);\n    this[btn] && this[btn].toggleAttribute('disabled', disabled);\n  }\n\n  /**\n   * Accessible label set on the internal <button> element for screen readers.\n   * @type {string}\n   * @default {hamburger}\n   */\n  get label(): string {\n    return this[props].label;\n  }\n\n  set label(label: string) {\n    this[props].label = label;\n    this[btn] && this[btn].setAttribute('aria-label', label);\n  }\n\n  /**\n   * Set to true when element is pressed.\n   * @type {boolean}\n   * @attr pressed\n   * @default false\n   */\n  get pressed(): boolean {\n    return this[props].pressed;\n  }\n\n  set pressed(pressed: boolean) {\n    this[props].pressed = pressed;\n    this.toggleAttribute('pressed', !!pressed);\n    this[btn] && this[btn].setAttribute('aria-pressed', `${!!pressed}`);\n    this[update]();\n  }\n\n  /**\n   * Size of the icon. Should be a number between 12 and 48.\n   * @type {number}\n   * @default 32\n   */\n  get size(): number {\n    return this[props].size;\n  }\n\n  set size(size: number) {\n    this[props].size = size;\n    this[update]();\n  }\n\n  constructor() {\n    super();\n    createRoot(this, tpl);\n    this.addEventListener('click', this);\n  }\n\n  connectedCallback(): void {\n    this[btn] = (this.shadowRoot as ShadowRoot).querySelector('button') as HTMLButtonElement;\n\n    (this.constructor as typeof Burger).observedAttributes.forEach((k) => {\n      // A user may set a property on an _instance_ of an element,\n      // before its prototype has been connected to this class.\n      // If so, we need to run it through the proper class setter.\n      if (this.hasOwnProperty(k)) {\n        const value = this[k as keyof this];\n        delete this[k as keyof this];\n        this[k as keyof this] = value;\n      } else if (!this[k as keyof this]) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this[k as keyof this] = defaultProps[k as keyof BurgerProps] as any;\n      }\n    });\n  }\n\n  attributeChangedCallback(prop: string, oldVal: string, newVal: string): void {\n    if (oldVal !== newVal) {\n      let value: unknown = newVal;\n      if (prop == 'size' || prop == 'duration') {\n        value = newVal === null ? null : Number(newVal);\n      } else if (prop == 'pressed' || prop == 'disabled') {\n        value = newVal !== null;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this[prop as keyof this] = value as any;\n    }\n  }\n\n  handleEvent(event: KeyboardEvent | MouseEvent): void {\n    if (event.type === 'click') {\n      this.pressed = !this.pressed;\n      this.dispatchEvent(new CustomEvent('pressed-changed', { detail: { value: this.pressed } }));\n    }\n  }\n\n  focus(): void {\n    this[btn] && this[btn].focus();\n  }\n\n  blur(): void {\n    this[btn] && this[btn].blur();\n  }\n\n  click(): void {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n\n  private [prepare](): RenderOptions {\n    const { distance, lines } = this;\n\n    const width = Math.max(12, Math.min(AREA, this.size));\n\n    const barHeightRaw = width / 12;\n    const barHeight = Math.round(barHeightRaw);\n\n    const space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n    const marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n    const margin = Math.round(marginRaw);\n\n    const height = barHeight * lines + margin * (lines - 1);\n\n    const translate =\n      lines === 3\n        ? distance === 'lg'\n          ? 4.0425\n          : distance === 'sm'\n          ? 5.1625\n          : 4.6325\n        : distance === 'lg'\n        ? 6.7875\n        : distance === 'sm'\n        ? 8.4875\n        : 7.6675;\n\n    const deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n\n    const barStyles = {\n      height: `${barHeight}px`,\n      left: `${Math.round((AREA - width) / 2)}px`,\n      width: `${width}px`\n    };\n\n    return {\n      barHeight,\n      barStyles,\n      margin,\n      move: parseFloat((width / translate - deviation / (4 / 3)).toFixed(2)),\n      pressed: this.pressed,\n      time: Math.max(0, this.duration),\n      topOffset: Math.round((AREA - height) / 2)\n    };\n  }\n\n  protected async [update](): Promise<void> {\n    if (!this[updating]) {\n      this[updating] = true;\n\n      // Ensure that property changes are batched.\n      this[updating] = await false;\n\n      this[render](this[prepare]());\n    }\n  }\n}\n"]}