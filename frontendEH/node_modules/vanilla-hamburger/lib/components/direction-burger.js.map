{"version":3,"file":"direction-burger.js","sourceRoot":"","sources":["../../src/lib/components/direction-burger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AACrC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAE7C,MAAM,OAAgB,eAAgB,SAAQ,MAAM;IAClD,MAAM,KAAK,kBAAkB;QAC3B,OAAO,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED,IAAI,SAAS,CAAC,QAA0B;QACtC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;IACjB,CAAC;CACF","sourcesContent":["import { Burger } from './burger.js';\nimport { props, update } from '../internals';\n\nexport abstract class DirectionBurger extends Burger {\n  static get observedAttributes(): string[] {\n    return super.observedAttributes.concat('direction');\n  }\n\n  /**\n   * The animation direction of the icon, left or right.\n   * @type {'left' | 'right'}\n   * @default left\n   */\n  get direction(): 'left' | 'right' {\n    return this[props].direction;\n  }\n\n  set direction(distance: 'left' | 'right') {\n    this[props].direction = distance;\n    this[update]();\n  }\n}\n"]}